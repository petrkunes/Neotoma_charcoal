PRA_cor_data <- PRA_pollen_wide[p.ind,-1:-2]
View(PRA_cor_data)
PRA_cor_data$CharArea <- log(PRA_charcoal_wide$`Charcoal area`[p.ind]+1)
cor(PRA_cor_data)
PRA_cor <- cor(PRA_cor_data)
View(PRA_cor)
PRA_cor
PRA_cor <- cor.test(PRA_cor_data)
mtcars
View(PRA_cor_data)
View(PRA_cor)
View(mtcars)
PRA_cor <- cor(t(PRA_cor_data))
View(PRA_cor)
PRA_cor <- cor(PRA_cor_data)
View(PRA_cor)
PRA_pollen_wide[p.ind,-1:-2]
PRA_charcoal_wide$`Charcoal area`[p.ind]+1
p.ind
merge(PRA_pollen_wide, PRA_charcoal_wide)
PRA_cor_data <- merge(PRA_pollen_wide, PRA_charcoal_wide)
View(PRA_cor_data)
PRA_cor <- cor(PRA_cor_data)
View(PRA_cor_data)
PRA_cor <- cor(PRA_cor_data[,-1:-2])
PRA_cor_data$`Charcoal area` <- log(PRA_cor_data$`Charcoal area` + 1)
PRA_cor <- cor(PRA_cor_data[,-1:-2])
View(PRA_cor_data)
PRA_cor_data[,-1:-2]
View(PRA_cor)
PRA_cor <- cor.test(PRA_cor_data[,-1:-2])
corrplot(PRA_cor)
?corrplot
corrplot(PRA_cor, col.lim = c(0, 1))
M = cor(mtcars)
corrplot(abs(M), order = 'AOE', col.lim = c(0, 1))
corrplot(M[1:8, ])
corrplot(M[, 1:8])
corrplot(PRA_cor[1,])
corrplot(PRA_cor[1:2,])
corrplot(PRA_cor[89,])
corrplot(matrix(PRA_cor[89,]))
corrplot(as.matrix(PRA_cor[89,]))
corrplot(t(as.matrix(PRA_cor[89,])))
corrplot(t(as.matrix(PRA_cor[89,-89])))
?cor
install.packages("Hmisc")
library(Hmisc)
PRA_cor <- rcor(PRA_cor_data[,-1:-2])
PRA_cor <- rcorr(PRA_cor_data[,-1:-2])
PRA_cor <- rcorr(as.matrix(PRA_cor_data[,-1:-2]))
corrplot(t(as.matrix(PRA_cor[89,-89])))
plot(PRA_cor)
View(PRA_cor)
PRA_cor <- rcorr(as.matrix(PRA_cor_data[,-1:-2]), type = "Pearsson")
PRA_cor <- rcorr(as.matrix(PRA_cor_data[,-1:-2]), type = "pearson")
View(PRA_cor)
corrplot(PRA_cor)
corrplot(PRA_cor$r)
?corrplot
corrplot(PRA_cor$r, p.mat = PRA_cor$P)
corrplot(PRA_cor$r[89,-89], p.mat = PRA_cor$P[89,-89])
corrplot(as.matrix(PRA_cor$r[89,-89]), p.mat = as.matrix(PRA_cor$P[89,-89]))
PRA_cor$r
corrplot(as.matrix(PRA_cor$r[-89,89]), p.mat = as.matrix(PRA_cor$P[-89,89]))
corrplot(t(as.matrix(PRA_cor$r[89,-89])), p.mat = t(as.matrix(PRA_cor$P[89,-89])))
t(as.matrix(PRA_cor$P[89,-89]))
which(PRA_cor$P[89,-89]<0.05)
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])), p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<=0.05)])))
View(poll.cor)
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<=0.01)])))
?hclust
?chclust
bstick(PRA_clust)
plot(PRA_charcoal_wide$age, log(PRA_charcoal_wide$`Charcoal area`+1), ylim=c(0, 6))
lines(PRA_charcoal_wide$age, lowess(PRA_charcoal_wide$`Charcoal area`, f=0.1)$y, col="red")
lines(PRA_charcoal_wide$age, loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.2)$fitted, col="blue")
lines(PRA_charcoal_wide$age, smooth.spline(PRA_charcoal_wide$`Charcoal area`, df = 25)$y, col="green")
?lowess
?loess
?smooth.spline
lines(PRA_charcoal_wide$age, lowess(PRA_charcoal_wide$`Charcoal area`, f=0.1)$y, col="red")
lines(PRA_charcoal_wide$age, loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.2)$fitted, col="blue")
lines(PRA_charcoal_wide$age, smooth.spline(PRA_charcoal_wide$`Charcoal area`, df = 25)$y, col="green")
plot(PRA_charcoal_wide$age, log(PRA_charcoal_wide$`Charcoal area`+1), ylim=c(0, 6), xlab = "Age BP")
plot(PRA_charcoal_wide$age, log(PRA_charcoal_wide$`Charcoal area`+1), ylim=c(0, 6), xlab = "Age cal BP", ylab = "CHAR")
lines(PRA_charcoal_wide$age, lowess(PRA_charcoal_wide$`Charcoal area`, f=0.1)$y, col="red")
lines(PRA_charcoal_wide$age, loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.2)$fitted, col="blue")
lines(PRA_charcoal_wide$age, smooth.spline(PRA_charcoal_wide$`Charcoal area`, df = 25)$y, col="green")
legend(1,6)
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"))
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"))
plot(PRA_charcoal_wide$age, log(PRA_charcoal_wide$`Charcoal area`+1), ylim=c(0, 6), xlab = "Age cal BP", ylab = "CHAR")
lines(PRA_charcoal_wide$age, lowess(PRA_charcoal_wide$`Charcoal area`, f=0.1)$y, col="red")
lines(PRA_charcoal_wide$age, loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.2)$fitted, col="blue")
lines(PRA_charcoal_wide$age, smooth.spline(PRA_charcoal_wide$`Charcoal area`, df = 25)$y, col="green")
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"))
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"), lty=1:2, cex=0.8)
plot(PRA_charcoal_wide$age, log(PRA_charcoal_wide$`Charcoal area`+1), ylim=c(0, 6), xlab = "Age cal BP", ylab = "CHAR")
lines(PRA_charcoal_wide$age, lowess(PRA_charcoal_wide$`Charcoal area`, f=0.1)$y, col="red")
lines(PRA_charcoal_wide$age, loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.2)$fitted, col="blue")
lines(PRA_charcoal_wide$age, smooth.spline(PRA_charcoal_wide$`Charcoal area`, df = 25)$y, col="green")
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"), lty=1:2, cex=0.8)
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"), lty=1, cex=0.8)
legend(1,6, legend = c("LOWESS", "LOESS", "smooth spline"), col = c("red", "blue", "green"), lty=2, cex=0.8)
ch.l<-loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.20)
View(ch.l)
char.p<-stats::predict(ch.l, PRA_pollen_wide$age)
char.p
# estimate values for given ages
PRA_char_loess <- loess(PRA_charcoal_wide$`Charcoal area`~PRA_charcoal_wide$age, span = 0.20)
stats::predict(PRA_char_loess, PRA_pollen_wide$age)
PRA_pca <- rda(decostand(PRA_pollen_wide[,-1:-2]))
PRA_pca <- rda(decostand(PRA_pollen_wide[,-1:-2], method = "hellinger"))
PRA_pca
?ordisurf
PRA_char_pred <- stats::predict(PRA_char_loess, PRA_pollen_wide$age)
ord<-ordisurf(PRA_pca, PRA_char_pred, knots = 2)
ord<-ordisurf(PRA_pca, PRA_char_pred, knots = 10)
ord<-ordisurf(PRA_pca, PRA_char_pred, knots = 5)
ord<-ordisurf(PRA_pca, PRA_char_pred, knots = 2)
plot(PRA_pca, type = "t")
plot(PRA_pca)
ordiplot(PRA_pca)
biplot(PRA_pca)
envfit(PRA_pca, PRA_char_pred)
envfit(PRA_pca, data.frame(PRA_char_pred))
PRA_PCA_plot <- biplot(PRA_pca)
plot(envfit(PRA_pca, data.frame(PRA_char_pred)))
PRA_PCA_plot <- biplot(PRA_pca)
plot(envfit(PRA_pca, data.frame(CHAR = PRA_char_pred)))
ordisurf(PRA_pca, PRA_char_pred, knots = 2)
PRA_PCA_plot <- biplot(PRA_pca)
plot(envfit(PRA_pca, data.frame(CHAR = PRA_char_pred)))
orditorp(PRA_PCA_plot, display = "species")
ordisurf(PRA_pca, PRA_char_pred, knots = 2)
tax.nam<-colnames(PRA_pollen_wide[,-1:-2])
tax<-c(25, 26,28, 29, 30, 32, 34, 35)
plot(rda.p, type = "n", xlim=c(-3, 3), ylim=c(-2, 3) )
points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
plot(ord, add=TRUE)
legend(-3.5, 3, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
# checking the gradient length with DCA
PRA_dca <- decorana(sqrt(PRA_pollen_wide[,-1:-2]))
plot(rda.p, type = "n")
points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
plot(PRA_pca, type = "n")
points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
ordiplot(PRA_pca, type = "n")
points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
ordiplot(PRA_pca, type = "n", display = "si")
points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
?scores
?rda
?scores
scores(rda.p, display="sites",scaling = 2, choice=1:2)
scores(PRA_pca, display = "sp")
scores(PRA_pca, display = "si")
View(sam.sc)
sam.sc<-scores(rda.p, display="sites",scaling = 1, choice=1:2)
sam.sc<-scores(rda.p, display="sites",scaling = 2, choice=1:2)
sam.sc<-scores(rda.p, display="sites",scaling = 3, choice=1:2)
sam.sc<-scores(rda.p, display="sites",scaling = 2, choice=1:2)
?rda
point(PRA_pca, col = PRA_zones + 6)
point(PRA_pca, col = PRA_zones + 6, pch = PRA_zones)
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones)
ordiplot(PRA_pca, type = "n", display = "si")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones)
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
tax.nam
tax<-c("Pinus", "Betula", "Picea", "Fagus")
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)}
plot(ord, add=TRUE)
i
tax.sc[i,1]
tax.sc[i,2]
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, tax.nam[i] , cex = 1.2)
tax.sc[i,1]*1.3
tax.nam[i]
tax.sc
tax.sc[i,]
rownames(tax.sc)
rownames(tax.sc)[i]
i
rownames(tax.sc)$i
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
# tax.nam<-colnames(PRA_pollen_wide[,-1:-2])
tax<-c("Pinus", "Betula", "Picea", "Fagus", "Poaceae")
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
# tax.nam<-colnames(PRA_pollen_wide[,-1:-2])
tax<-c("Pinus", "Betula", "Picea", "Fagus", "Poaceae", "Corylus")
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
plot(ord, add=TRUE)
legend(-3.5, 3, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
legend(-1, -0.4, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
legend(-1, 0, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
plot(ord, add=TRUE)
legend(-1, 0, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
ordiplot(PRA_pca, type = "n", display = "sp")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2)
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1]*1.3, tax.sc[i,2]*1.1, i , cex = 1.2)}
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1]*1.1, tax.sc[i,2]*1.1, i , cex = 1.2, col = "red")}
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1], tax.sc[i,2], i , cex = 1.2, col = "red")}
?orditorp
PRA_ordisurf <- ordisurf(PRA_pca, PRA_char_pred, knots = 2)
tax.sc<-scores(rda.p, display="species", choice=1:2)
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1], tax.sc[i,2], i , cex = 1.2, col = "red")}
tax.sc<-scores(PRA_pca, display="species", choice=1:2)
legend(-1, 0, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
plot(PRA_ordisurf, add=TRUE)
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
# text(tax.sc[i,1], tax.sc[i,2], i , cex = 1.2, col = "red")
}
plot(PRA_ordisurf, add=TRUE)
orditorp(PRA_pca)
orditorp(PRA_pca, display = "sp")
orditorp(PRA_pca, display = tax)
orditorp(PRA_pca, display = "sp", select = tax)
?orditorp
orditorp(PRA_pca, display = "sp", select = tax)
orditorp(PRA_pca, select = tax)
orditorp(PRA_pca, display = "sp", select = tax)
tax
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1]+1, tax.sc[i,2]+1, i , cex = 1.2, col = "red")
}
ordiplot(PRA_pca, type = "n")
points(PRA_pca, col = PRA_zones + 6, pch = PRA_zones, lwd = 2)
# points(sam.sc[,1], sam.sc[,2], pch = PRA_zones, lwd=2, col=PRA_zones+6)
#lines(sam.sc[1:89,1], sam.sc[1:89,2], col="gray")
for (i in tax) {arrows(0,0,tax.sc[i,1], tax.sc[i,2], length = 0.1, angle = 20, code = 2, lwd = 2, col = "red")
text(tax.sc[i,1]+0.05, tax.sc[i,2]+0.05, i , cex = 1.2, col = "red")
}
plot(PRA_ordisurf, add=TRUE)
legend(-1, 0, legend=c("zone 1", "zone 2", "zone 3", "zone 4", "zone 5", "zone 6", "zone 7"),
pch = c(1,2,3,4,5,6,7), pt.cex = 1.2, pt.lwd=2, bty = "n", col=c(7,8,9,10,11,12,13))
PRA_PCA_plot <- biplot(PRA_pca)
plot(envfit(PRA_pca, data.frame(CHAR = PRA_char_pred)))
orditorp(PRA_PCA_plot, display = "species")
?ordisurf
# checking the gradient length with DCA
PRA_dca <- decorana(decostand(PRA_pollen_wide[,-1:-2], method = "hellinger"))
PRA_dca
biplot(PRA_dca)
plot(PRA_dca)
plot(PRA_dca, display = "si")
plot(PRA_dca, display = "sites")
PRA_cor_data <- merge(PRA_pollen_wide, PRA_charcoal_wide)
PRA_cor_data$`Charcoal area` <- log(PRA_cor_data$`Charcoal area` + 1)
PRA_cor <- rcorr(as.matrix(PRA_cor_data[,-1:-2]), type = "pearson")
PRA_cor <- rcorr(as.matrix(PRA_cor_data[,-1:-2]), type = "pearson")
which(PRA_cor$P[89,-89]<0.05)
which(PRA_cor$P[89,-89]<0.01)
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])), p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<=0.01)])))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])), p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$r[89,-89]<0.05)])))
PRA_cor$P[89,which(PRA_cor$r[89,-89]<0.05)])
PRA_cor$P[89,which(PRA_cor$r[89,-89]<0.05)]))
t(as.matrix(PRA_cor$P[89,which(PRA_cor$r[89,-89]<0.05)]))
t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)]))
t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)]))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])),
p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])))
?corrplot
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])),
p.mat = as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)]))
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])),
p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])))
cor.data <- (t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)]))
cor.data <- t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)]))
View(cor.data)
cor.pval <- t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)]))
View(cor.pval)
View(cor.data)
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])),
p.mat = t(as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])))
corrplot(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)]),
p.mat = as.matrix(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)]))
corrplot(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)],
p.mat = PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])
corrplot(cor.data, p.mat = cor.pval)
cor.data <- data.frame(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])
View(cor.data)
cor.pval <- data.frame(PRA_cor$P[89,which(PRA_cor$P[89,-89]<0.05)])
corrplot(cor.data, p.mat = cor.pval)
corrplot(t(as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<=0.01)])))
corrplot(cor.data)
cor.data <- as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])
corrplot(cor.data)
cor.data <- as.data.frame(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])
corrplot(cor.data)
cor.data <- matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])
cor.data <- as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)])
View(cor.data)
cor.data <- as.matrix(PRA_cor$r[89,which(PRA_cor$P[89,-89]<0.05)], col.names = "Charcoal")
colnames(cor.data) <- "Charcoal"
corrplot(cor.data)
corrplot(t(cor.data))
# Check correlation between different pollen taxa and charcoal?
install.packages(corrplot)
# Check correlation between different pollen taxa and charcoal?
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
install.packages("Hmisc")
library(Hmisc)
devtools::install_github('NeotomaDB/neotoma2')
library(neotoma2)
char_sites <- get_sites(taxa = 'Charcoal%', all_data = TRUE)
char_sites %>% neotoma2::filter(sitename == "Kettle Lake")
View(char_sites)
char_sites
char_ds <- char_sites %>% get_datasets(all_data = TRUE)
head(char_sites, 10)
# char_ds %>% neotoma2::filter(sitename == "Kettle Lake")
table(as.data.frame(datasets(char_ds))$datasettype)
char_ds %>% neotoma2::filter(sitename == "Kettle Lake")
char_mc <- char_ds %>% neotoma2::filter(datasettype %in% c("macrocharcoal", "charcoal", "microcharcoal"))
View(char_mc)
char_pol <- char_ds %>% filter(datasettype == "pollen" & siteid %in% getids(char_mc)$siteid)
# char_pol <- char_ds %>% filter(datasettype %in% "pollen")
char_pol %>% neotoma2::filter(sitename == "Kettle Lake")
View(char_pol)
char_pol
summary(char_pol)
char_mc
char_pol <- char_ds %>% filter(datasettype == "pollen")
View(char_pol)
getids(char_pol)
char_ds %>% filter(siteid %in% getids(char_mc)$siteid & siteid %in% getids(char_pol)$siteid)
char_pol <- char_ds %>% filter(datasettype == "pollen" & siteid %in% getids(char_mc)$siteid)
View(char_pol)
summary(char_pol)
char_mc_small <- char_mc %>% filter(siteid %in% getids(char_pol)$siteid)
summary(char_mc_small)
summary(char_sites)
neotoma::summary(char_sites, 10)
?summary
neotoma::summary(head(char_sites, 10))
neotoma2::summary(head(char_sites, 10))
char_sites %>% neotoma2::filter(sitename == "Kettle Lake")
char_ds %>% neotoma2::filter(sitename == "Kettle Lake")
# char_ds %>% neotoma2::filter(sitename == "Kettle Lake")
table(as.data.frame(datasets(char_ds))$datasettype)
summary(char_ds %>% neotoma2::filter(sitename == "Kettle Lake"))
# summary(char_ds %>% neotoma2::filter(sitename == "Kettle Lake"))
table(as.data.frame(datasets(char_ds))$datasettype)
char_sites <- get_sites(all_data = TRUE)
char_sites <- get_sites(taxa = 'Charcoal%', all_data = TRUE)
neotoma2::summary(head(char_sites, 10))
char_sites %>% neotoma2::filter(sitename == "Kettle Lake")
char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
char_sites <- get_sites(datasettype = "charcoal",all_data = TRUE)
char_ds <- char_sites %>% get_datasets(all_data = TRUE)
char_sites <- get_sites(taxa = 'Charcoal%', all_data = TRUE)
neotoma2::summary(head(char_sites, 10))
char_sites %>% neotoma2::filter(sitename == "Kettle Lake")
summary(char_sites %>% neotoma2::filter(sitename == "Kettle Lake"))
summary(char_sites %>% neotoma2::filter(sitename == "Poprad%"))
summary(char_sites %>% neotoma2::filter(sitename == "Popradské pleso"))
summary(char_sites %>% neotoma2::filter(sitename == "Ďurova%"))
summary(char_sites %>% neotoma2::filter(sitename == "Prášilské jezero"))
char_mc <- char_ds %>% neotoma2::filter(datasettype %in% c("macrocharcoal", "charcoal", "microcharcoal"))
char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
char_mc
# char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
summary(char_mc)
# char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
summary(char_mc)
get_datasets(datasettype = "pollen")
char_pol <- get_datasets(datasettype = "pollen" & siteid %in% getids(char_mc)$siteid)
char_pol <- get_datasets(datasettype = "pollen" & siteid %in% getids(char_mc)$siteid)
getids(char_mc)$siteid
char_pol <- get_datasets(siteid %in% getids(char_mc)$siteid)
getids(char_mc)$siteid
pol_sites <- get_sites(datasettype = "pollen")
pol_sites <- get_sites(datasettype = "pollen", all_data = ALL)
pol_sites <- get_sites(datasettype = "pollen", all_data = TRUE)
getids(pol_sites)
pol_ds <- pol_sites %>% get_datasets(all_data = TRUE)
char_pol <- pol_ds %>% filter(siteid %in% getids(char_mc)$siteid)
View(char_pol)
# char_pol <- char_ds %>% filter(datasettype == "pollen" & siteid %in% getids(char_mc)$siteid)
# char_pol <- char_ds %>% filter(datasettype == "pollen")
char_pol %>% neotoma2::filter(sitename == "Kettle Lake")
summary(char_pol)
# char_pol <- char_ds %>% filter(datasettype == "pollen" & siteid %in% getids(char_mc)$siteid)
# char_pol <- char_ds %>% filter(datasettype == "pollen")
char_pol %>% neotoma2::filter(sitename == "Kettle Lake")
char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
pol_ds %>% neotoma2::filter(sitename == "Kettle Lake")
pol_ds <- get_datasets(siteid = 214)
View(pol_ds)
pol_ds <- get_datasets(siteid %in% getids(char_mc)$siteid)
getids(char_mc)$siteid
pol_ds <- get_datasets(siteid %in% getids(char_mc)$siteid)
pol_ds <- get_datasets(datasettype = "pollen") %>%  filter(siteid %in% getids(char_mc)$siteid)
View(pol_ds)
pol_ds <- get_datasets(datasettype = "pollen", all_data = TRUE) %>%  filter(siteid %in% getids(char_mc)$siteid)
pol_ds <- get_datasets(datasettype = "pollen", siteid = 23) %>%  filter(siteid %in% getids(char_mc)$siteid)
pol_ds <- get_datasets(datasettype = "pollen", siteid = 23)
pol_ds <- get_datasets(datasettype = "pollen", siteid = 2570)
pol_ds <- get_datasets(datasettype = "pollen", siteid = getids(char_mc)$siteid)
siteid %in% getids(char_mc)$siteid
pol_ds <- get_datasets(datasettype = "pollen")
View(pol_ds)
pol_ds <- get_datasets(datasettype = "pollen", all_data = TRUE)
pol_sites <- get_sites(datasettype %in% c("pollen", "macrocharcoal", "charcoal", "microcharcoal"), all_data = TRUE)
pol_ds <- get_datasets(datasettype = "pollen", all_data = TRUE)
pol_ds_char <- pol_ds %>%  filter(siteid %in% getids(char_mc)$siteid)
pol_ds_char %>% neotoma2::filter(sitename == "Kettle Lake")
View(char_mc)
char_mc %>% neotoma2::filter(sitename == "Kettle Lake")
# pol_ds_char %>% neotoma2::filter(sitename == "Kettle Lake")
char_mc_pol <- char_mc %>% neotoma2::filter(siteid %in% getids(pol_ds_char)$siteid)
char_and_pollen <- c(pol_ds_char, char_mc_pol)
View(char_and_pollen)
summary(char_and_pollen)
char_and_pollen %>% neotoma2::filter(sitename == "Kettle Lake")
records <- char_and_pollen %>% get_downloads()
head(records, 20)
samples_ch_p <- records %>% samples()
View(samples_ch_p)
head(records, 20)
save.image("~/Documents/GitHub/Neotoma_charcoal/neotoma_charcoal.RData")
